https://bobbyhadz.com/blog/javascript-clear-object-delete-all-properties

One Way

const obj = {a: 'one', b: 'two'}; // const variable can't be reassigned
for (const key in obj) {
  delete obj[key];
}

Second Way

let obj = {a: 'one', b: 'two'}; // let/var variable can be reassigned
obj = {};

For non enumerable scenario

let obj = {a: 'one', b: 'two'};

Object.defineProperty(obj, 'color', {
  value: 'red',
  enumerable: false, // 👈️ defaults to false
  configurable: true,
});

const allProperties = Object.getOwnPropertyNames(obj);
console.log(allProperties); // 👉️ ['a', 'b', 'color']

allProperties.forEach(property => {
  delete obj[property];
});

console.log(Object.getOwnPropertyNames(obj)); // []


Another

const obj = {a: 'one', b: 'two', c: 'three'};

Object.keys(obj).forEach(key => {
  delete obj[key];
});

console.log(obj); // 👉️ {}

One more

const obj = {a: 'one', b: 'two', c: 'three'};

// 👇️ [ 'a', 'b', 'c' ]
console.log(Object.keys(obj));

Another

const obj = {a: 'one', b: 'two', c: 'three'};

Object.keys(obj).forEach(key => {
  delete obj[key];
});

console.log(obj); // 👉️ {}
